///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace TradeTrackerProject.TestCases.LoadingTPOSM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The LoadTPOSM recording.
    /// </summary>
    [TestModule("baac0506-7f73-4f48-9dc9-e4a05ac1f938", ModuleType.Recording, 1)]
    public partial class LoadTPOSM : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TradeTrackerProject.TradeTrackerProjectRepository repository.
        /// </summary>
        public static TradeTrackerProject.TradeTrackerProjectRepository repo = TradeTrackerProject.TradeTrackerProjectRepository.Instance;

        static LoadTPOSM instance = new LoadTPOSM();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public LoadTPOSM()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static LoadTPOSM Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Caption='Route Info') on item 'PkComTradetracker.RouteInfo'.", repo.PkComTradetracker.RouteInfoInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.PkComTradetracker.RouteInfoInfo, "Caption", "Route Info");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PkComTradetracker.TK_Value_Outlets_' at Center", repo.PkComTradetracker.TK_Value_Outlets_Info, new RecordItemIndex(1));
            repo.PkComTradetracker.TK_Value_Outlets_.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Caption='Settings') on item 'PkComTradetracker.Settings'.", repo.PkComTradetracker.SettingsInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.PkComTradetracker.SettingsInfo, "Caption", "Settings");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PkComTradetracker.List1.BWUs_Info' at Center", repo.PkComTradetracker.List1.BWUs_InfoInfo, new RecordItemIndex(3));
            repo.PkComTradetracker.List1.BWUs_Info.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=480,Height=74}) on item 'PkComTradetracker.BWUsInfovalidation'.", repo.PkComTradetracker.BWUsInfovalidationInfo, new RecordItemIndex(4));
            Validate.ContainsImage(repo.PkComTradetracker.BWUsInfovalidationInfo, BWUsInfovalidation_Screenshot1, BWUsInfovalidation_Screenshot1_Options);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key '{BACK}' press on 'PkComTradetracker'.", repo.PkComTradetracker.SelfInfo, new RecordItemIndex(5));
            repo.PkComTradetracker.Self.PressKeys("{BACK}");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PkComTradetracker.List1.UnitsInfo' at Center", repo.PkComTradetracker.List1.UnitsInfoInfo, new RecordItemIndex(6));
            repo.PkComTradetracker.List1.UnitsInfo.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Caption='Units Info') on item 'PkComTradetracker.UnitsInfo_text'.", repo.PkComTradetracker.UnitsInfo_textInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.PkComTradetracker.UnitsInfo_textInfo, "Caption", "Units Info");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key '{BACK}' press on 'PkComTradetracker'.", repo.PkComTradetracker.SelfInfo, new RecordItemIndex(8));
            repo.PkComTradetracker.Self.PressKeys("{BACK}");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key '{BACK}' press on 'PkComTradetracker'.", repo.PkComTradetracker.SelfInfo, new RecordItemIndex(9));
            repo.PkComTradetracker.Self.PressKeys("{BACK}");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PkComTradetracker.TPOSMLoading' at Center", repo.PkComTradetracker.TPOSMLoadingInfo, new RecordItemIndex(10));
            repo.PkComTradetracker.TPOSMLoading.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=480,Height=74}) on item 'PkComTradetracker.TPOSMLOADING_validation'.", repo.PkComTradetracker.TPOSMLOADING_validationInfo, new RecordItemIndex(11));
            Validate.ContainsImage(repo.PkComTradetracker.TPOSMLOADING_validationInfo, TPOSMLOADING_validation_Screenshot1, TPOSMLOADING_validation_Screenshot1_Options);
            Delay.Milliseconds(0);
            
            ConstantUserCode.UserCodeCollection.loadAndEditTPOSMFields();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PkComTradetracker.TPOSM_SubmitButton' at Center", repo.PkComTradetracker.TPOSM_SubmitButtonInfo, new RecordItemIndex(13));
            repo.PkComTradetracker.TPOSM_SubmitButton.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=480,Height=74}) on item 'PkComTradetracker.TPOSMSummary_validation'.", repo.PkComTradetracker.TPOSMSummary_validationInfo, new RecordItemIndex(14));
            Validate.ContainsImage(repo.PkComTradetracker.TPOSMSummary_validationInfo, TPOSMSummary_validation_Screenshot1, TPOSMSummary_validation_Screenshot1_Options);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PkComTradetracker.TPOSM_TakePicture' at Center", repo.PkComTradetracker.TPOSM_TakePictureInfo, new RecordItemIndex(15));
            repo.PkComTradetracker.TPOSM_TakePicture.Touch();
            Delay.Milliseconds(500);
            
            ConstantUserCode.UserCodeCollection.TakePhoto();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PkComTradetracker.TPOSM_ButtonDone' at Center", repo.PkComTradetracker.TPOSM_ButtonDoneInfo, new RecordItemIndex(17));
            repo.PkComTradetracker.TPOSM_ButtonDone.Touch();
            Delay.Milliseconds(500);
            
        }

#region Image Feature Data
        CompressedImage BWUsInfovalidation_Screenshot1
        { get { return repo.PkComTradetracker.BWUsInfovalidationInfo.GetScreenshot1(new Rectangle(0, 0, 480, 74)); } }

        Imaging.FindOptions BWUsInfovalidation_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage TPOSMLOADING_validation_Screenshot1
        { get { return repo.PkComTradetracker.TPOSMLOADING_validationInfo.GetScreenshot1(new Rectangle(0, 0, 480, 74)); } }

        Imaging.FindOptions TPOSMLOADING_validation_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage TPOSMSummary_validation_Screenshot1
        { get { return repo.PkComTradetracker.TPOSMSummary_validationInfo.GetScreenshot1(new Rectangle(0, 0, 480, 74)); } }

        Imaging.FindOptions TPOSMSummary_validation_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
